version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka_net

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    networks:
      - kafka_net
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.0.108
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  schemaregistry:
    image: confluentinc/cp-schema-registry:5.2.1
    restart: always
    depends_on:
      - zookeeper
    networks:
      - kafka_net
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - 8081:8081

  restproxy:
    image: confluentinc/cp-kafka-rest:5.2.1
    restart: always
    depends_on:
      - kafka
    networks:
      - kafka_net
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schemaregistry:8081"
      KAFKA_REST_HOST_NAME: restproxy
      KAFKA_REST_DEBUG: "true"
    ports:
      - 8082:8082

  producer:
    image: boodyvo/kafka-go-example
    restart: always
    depends_on:
      - schemaregistry
    networks:
      - kafka_net
    command: producer --topic=test --bs=kafka:9092 --sr=http://schemaregistry:8081 --sp=/schema.avsc

  consumer:
    image: boodyvo/kafka-go-example
    restart: always
    depends_on:
      - producer
    networks:
      - kafka_net
    environment:
      BROKER_SERVER: kafka:9092
      SCHEMA_REGISTRY: schemaregistry:8081
      TOPIC: test
    command: producer --topic=test --bs=kafka:9092 --sr=http://schemaregistry:8081

networks:
  kafka_net: